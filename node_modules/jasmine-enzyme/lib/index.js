'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _addMatcher = require('./addMatcher');

var _addMatcher2 = _interopRequireDefault(_addMatcher);

var _enzymeMatchers = require('enzyme-matchers');

var _enzymeMatchers2 = _interopRequireDefault(_enzymeMatchers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This source code is licensed under the MIT-style license found in the
 * LICENSE file in the root directory of this source tree. *
 *
 * @providesModule JasmineEnzyme
 * 
 */

function jasmineEnzyme() {
  // Migration step for moving people from jasmine-enzyme
  // to jest-enzyme
  if (typeof jest !== 'undefined') {
    throw new Error(`
      [jasmine-enzyme] The jest usage has been moved to a new package: "jest-enzyme".
      Use that project instead of this. For more information, see: _______
    `);
  }

  var matchers = Object.keys(_enzymeMatchers2.default);

  matchers.forEach(function (matcher) {
    (0, _addMatcher2.default)({
      [matcher]: function () {
        return { compare: _enzymeMatchers2.default[matcher] };
      }
    });
  });
}

// Also expose enzymeMatchers directly so that the matchers can be added on a per-spec basis
// instead of globally on the jasmine object. This also supports older versions of jasmine where
// jasmine.addMatchers isn't defined and matchers must be added to the spec in a beforeEach().
//
// Add enzymeMatchers as an expando property onto the jasmineEnzyme function for backwards
// compatibility with previous versions of jasmine-enzyme.
jasmineEnzyme.enzymeMatchers = _enzymeMatchers2.default;

exports.default = jasmineEnzyme;
module.exports = exports['default'];